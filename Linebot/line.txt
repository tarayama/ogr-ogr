
@handler.add(MessageEvent, message=TextMessage)
def Connect_LineAccount(event):
    profile = line_bot_api.get_profile(event.source.user_id)
    line_userid = profile.userid
    getToken = "{}/user/{}/linkToken".format(LINEBOT_ENDPOINT,line_userid)
    messages = [{
        "type": "template",
        "altText": "Account Link",
        "template": {
            "type": "buttons",
            "text": "Account Link",
            "actions": [{
                "type": "uri",
                "label": "Account Link",
                "uri": "https://ogr-ogr.herokuapp.com/accounts/login"
            }]
        }
    }]
    ogr_userid = push_message(line_userid, messages)
    if ogr_userid == request.user.id:
        lineaccount = LineAccount(
            user = request.user,
            line_userid = line_userid,
            line_nonceToken = make_nonceToken()
        )
        lineaccount.save()
    return HttpResponse(status=200)

@handler.add(MessageEvent, message=TextMessage)
def DisConnect_LineAccount(event,token):
    lineaccount = LineAccount.objects.get(line_nonceToken = token)
    lineaccount.delete()
    return HttpResponse(status=200)

def make_nonceToken():
    nonce_token = secrets.token_hex(16)
    return nonce_token

def push_message(userid, messages):
    pushurl = "{}/bot/message/push".format(LINEBOT_ENDPOINT)
    body = {
            'replyToken': userid,
            'messages': messages
    }
    req = urllib.request.Request(pushurl, json.dumps(body).encode(), HEADER)
